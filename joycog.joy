(* joycog.joy *)
(* Given two lists of gear sprockets will calculate all ratios *)

DEFINE

	(* Sort Routine *)

	qsort1 == [ small ]
	          [ ]
	          [ uncons [[first] unary2 > ] split ]
	          [ [swap] dip cons concat ]
	          binrec;

	(* Constants *)

	(* littlegears is now the argument to ratios *)
	(* littlegears == [12 13 15 17 19 21 23 26]; *)

	biggears == [34 50];

	biggear1 == biggears first
	            1.0 *;
	biggear2 == biggears second
	            1.0 *;

	(* Ratios Routine *)

	ratios ==
	           dup
(* Ratios1 *)
	           dup
	           [biggear1 swap /] map
	           swap
	           zip
	           [biggear1 unitlist concat] map;

	           swap
(* Ratios2 *)
	           dup
	           [biggear2 swap /] map
	           swap
	           zip
	           [biggear2 unitlist concat] map;
(* Join *)
	           concat
(* sort *)
	           qsort1.
